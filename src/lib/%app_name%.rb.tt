require 'rubygems'
require 'bundler/setup'
require 'virtus'
require 'thor'
require 'logger'

# <%= app_name.camelize %>
module <%= app_name.camelize %>
  # Loading core extensions
  Dir["#{File.dirname(__FILE__)}/../lib/<%= app_name %>/core_ext/*.rb"]
    .each do |file|
    require file
  end

  # Loading exception
  Dir["#{File.dirname(__FILE__)}/../lib/<%= app_name %>/exception/*.rb"]
    .each do |file|
    require file
  end

  require_relative '<%= app_name %>/version'
  require_relative '<%= app_name %>/command/base'
  require_relative '<%= app_name %>/boot/initializer'
  require_relative '<%= app_name %>/boot/application'
  require_relative '<%= app_name %>/core/configuration'

  class << self
    # Environment
    #
    # @return [String] the current environment
    def env
      unless defined?(TEMPLATE_ENV)
        load File.expand_path('../../config/environment.rb',  __FILE__)
      end
      TEMPLATE_ENV
    end

    # Logger
    #
    # @return [Logger] the logger
    def logger
      @_logger ||= Logger.new(
        "#{File.dirname(__FILE__)}/../log/#{config.log_file}"
      )
    end
  end
end
